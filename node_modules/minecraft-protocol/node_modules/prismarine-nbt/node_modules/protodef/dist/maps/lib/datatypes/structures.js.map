{"version":3,"sources":["lib/datatypes/structures.js"],"names":[],"mappings":"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","file":"lib/datatypes/structures.js","sourcesContent":["var { getField, tryCatch, addErrorField } = require(\"../utils\");\n\nmodule.exports = {\n  'array': [readArray, writeArray, sizeOfArray],\n  'count': [readCount, writeCount, sizeOfCount],\n  'container': [readContainer, writeContainer, sizeOfContainer]\n};\n\n\nfunction evalCount(count, fields) {\n  if(fields[count[\"field\"]] in count[\"map\"])\n    return count[\"map\"][fields[count[\"field\"]]];\n  return count[\"default\"];\n}\n\nfunction readArray(buffer, offset, typeArgs, rootNode) {\n  var results = {\n    value: [],\n    size: 0\n  };\n  var count;\n  if(typeof typeArgs.count === \"object\")\n    count = evalCount(typeArgs.count, rootNode);\n  else if (typeof typeArgs.count !== \"undefined\")\n    count = getField(typeArgs.count, rootNode);\n  else if (typeof typeArgs.countType !== \"undefined\") {\n    var countResults;\n    tryCatch(() => {\n      countResults = this.read(buffer, offset, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n    }, (e) => {\n      addErrorField(e, \"$count\");\n      throw e;\n    });\n    results.size += countResults.size;\n    offset += countResults.size;\n    count = countResults.value;\n  } else // TODO : broken schema, should probably error out.\n    count = 0;\n  for(var i = 0; i < count; i++) {\n    var readResults;\n    tryCatch(() => {\n      readResults = this.read(buffer, offset, typeArgs.type, rootNode);\n    }, (e) => {\n      addErrorField(e, i);\n      throw e;\n    });\n    results.size += readResults.size;\n    offset += readResults.size;\n    results.value.push(readResults.value);\n  }\n  return results;\n}\n\nfunction writeArray(value, buffer, offset, typeArgs, rootNode) {\n  if (typeof typeArgs.count === \"undefined\" &&\n      typeof typeArgs.countType !== \"undefined\") {\n    tryCatch(() => {\n      offset = this.write(value.length, buffer, offset, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n    }, (e) => {\n      addErrorField(e, \"$count\");\n      throw e;\n    });\n  } else if (typeof typeArgs.count === \"undefined\") { // Broken schema, should probably error out\n  }\n  for(var index in value) {\n    tryCatch(() => {\n      offset = this.write(value[index], buffer, offset, typeArgs.type, rootNode);\n    }, (e) => {\n      addErrorField(e, index);\n      throw e;\n    });\n  }\n  return offset;\n}\n\nfunction sizeOfArray(value, typeArgs, rootNode) {\n  var size = 0;\n  if (typeof typeArgs.count === \"undefined\" &&\n      typeof typeArgs.countType !== \"undefined\") {\n    tryCatch(() => {\n      size = this.sizeOf(value.length, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n    }, (e) => {\n      addErrorField(e, \"$count\");\n      throw e;\n    });\n  }\n  for(var index in value) {\n    tryCatch(() => {\n      size += this.sizeOf(value[index], typeArgs.type, rootNode);\n    }, (e) => {\n      addErrorField(e, index);\n      throw e;\n    });\n  }\n  return size;\n}\n\n\nfunction readContainer(buffer, offset, typeArgs, context) {\n  var results = {\n    value: { \"..\": context },\n    size: 0\n  };\n  typeArgs.forEach((typeArg) => {\n    tryCatch(() => {\n      var readResults = this.read(buffer, offset, typeArg.type, results.value);\n      results.size += readResults.size;\n      offset += readResults.size;\n      if (typeArg.anon) {\n        Object.keys(readResults.value).forEach(function(key) {\n          results.value[key] = readResults.value[key];\n        });\n      } else\n        results.value[typeArg.name] = readResults.value;\n    }, (e) => {\n      if (typeArgs && typeArg && typeArg.name)\n        addErrorField(e, typeArg.name);\n      else\n        addErrorField(e, \"unknown\");\n      throw e;\n    });\n  });\n  delete results.value[\"..\"];\n  return results;\n}\n\nfunction writeContainer(value, buffer, offset, typeArgs, context) {\n  value[\"..\"] = context;\n  typeArgs.forEach((typeArg) => {\n    tryCatch(() => {\n      if (typeArg.anon)\n        offset = this.write(value, buffer, offset, typeArg.type, value);\n      else\n        offset = this.write(value[typeArg.name], buffer, offset, typeArg.type, value);\n    }, (e) => {\n      if (typeArgs && typeArg && typeArg.name)\n        addErrorField(e, typeArg.name);\n      else\n        addErrorField(e, \"unknown\");\n      throw e;\n    });\n  });\n  delete value[\"..\"];\n  return offset;\n}\n\nfunction sizeOfContainer(value, typeArgs, context) {\n  value[\"..\"] = context;\n  var size = 0;\n  typeArgs.forEach((typeArg) => {\n    tryCatch(() => {\n      if (typeArg.anon)\n        size += this.sizeOf(value, typeArg.type, value);\n      else\n        size += this.sizeOf(value[typeArg.name], typeArg.type, value);\n    }, (e) => {\n      if (typeArgs && typeArg && typeArg.name)\n        addErrorField(e, typeArg.name);\n      else\n        addErrorField(e, \"unknown\");\n      throw e;\n    });\n  });\n  delete value[\"..\"];\n  return size;\n}\n\nfunction readCount(buffer, offset, typeArgs, rootNode) {\n  return this.read(buffer, offset, typeArgs.type, rootNode);\n}\n\nfunction writeCount(value, buffer, offset, typeArgs, rootNode) {\n  // Actually gets the required field, and writes its length. Value is unused.\n  // TODO : a bit hackityhack.\n  return this.write(getField(typeArgs.countFor, rootNode).length, buffer, offset, typeArgs.type, rootNode);\n}\n\nfunction sizeOfCount(value, typeArgs, rootNode) {\n  // TODO : should I use value or getField().length ?\n  return this.sizeOf(getField(typeArgs.countFor, rootNode).length, typeArgs.type, rootNode);\n}\n"],"sourceRoot":"/source/"}