{"version":3,"sources":["lib/protocols.js"],"names":[],"mappings":"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","file":"lib/protocols.js","sourcesContent":["var { getFieldInfo } = require('./utils');\nvar reduce = require('lodash.reduce');\n\nfunction isFieldInfo(type) {\n  return typeof type === \"string\"\n    || (Array.isArray(type) && typeof type[0] === \"string\")\n    || type.type;\n}\n\nfunction findArgs(acc, v, k) {\n  if (typeof v === \"string\" && v.charAt(0) === '$')\n    acc.push({ \"path\": k, \"val\": v.substr(1) });\n  else if (Array.isArray(v) || typeof v === \"object\")\n    acc = acc.concat(reduce(v, findArgs, []).map((v) => ({ \"path\": k + \".\" + v.path, \"val\": v.val })));\n  return acc;\n}\n\nfunction setField(path, val, into) {\n  var c = path.split('.').reverse();\n  while (c.length > 1) {\n    into = into[c.pop()];\n  }\n  into[c.pop()] = val;\n}\n\nfunction extendType(functions, defaultTypeArgs) {\n  var argPos = reduce(defaultTypeArgs, findArgs, []);\n  return [function read(buffer, offset, typeArgs, context) {\n    var args = JSON.parse(JSON.stringify(defaultTypeArgs));\n    argPos.forEach((v) => {\n      setField(v.path, typeArgs[v.val], args);\n    });\n    return functions[0].call(this, buffer, offset, args, context);\n  }, function write(value, buffer, offset, typeArgs, context) {\n    var args = JSON.parse(JSON.stringify(defaultTypeArgs));\n    argPos.forEach((v) => {\n      setField(v.path, typeArgs[v.val], args);\n    });\n    return functions[1].call(this, value, buffer, offset, args, context);\n  }, function sizeOf(value, typeArgs, context) {\n    var args = JSON.parse(JSON.stringify(defaultTypeArgs));\n    argPos.forEach((v) => {\n      setField(v.path, typeArgs[v.val], args);\n    });\n    if (typeof functions[2] === \"function\")\n      return functions[2].call(this, value, args, context);\n    else\n      return functions[2];\n  }];\n}\n\nclass ProtoDef\n{\n  types={};\n\n  constructor() {\n    this.addDefaultTypes();\n  }\n\n  addDefaultTypes() {\n    this.addTypes(require(\"./datatypes/numeric\"));\n    this.addTypes(require(\"./datatypes/utils\"));\n    this.addTypes(require(\"./datatypes/structures\"));\n    this.addTypes(require(\"./datatypes/conditional\"));\n  }\n\n  addType(name, functions) {\n    if (functions === \"native\")\n      return;\n    else if (isFieldInfo(functions)) {\n      var fieldInfo = getFieldInfo(functions);\n      this.types[name] = extendType(this.types[fieldInfo.type], fieldInfo.typeArgs);\n    }\n    else\n      this.types[name] = functions;\n  }\n\n  addTypes(types) {\n    var self = this;\n    Object.keys(types).forEach(function(name) {\n      self.addType(name, types[name]);\n    });\n  }\n\n  read(buffer, cursor, _fieldInfo, rootNodes) {\n    let fieldInfo = getFieldInfo(_fieldInfo);\n    var type = this.types[fieldInfo.type];\n    if(!type) {\n      return {\n        error: new Error(\"missing data type: \" + fieldInfo.type)\n      };\n    }\n    var readResults = type[0].call(this, buffer, cursor, fieldInfo.typeArgs, rootNodes);\n    if(readResults == null) {\n      throw new Error(\"Reader returned null : \" + JSON.stringify(fieldInfo));\n    }\n    if(readResults && readResults.error) return {error: readResults.error};\n    return readResults;\n  }\n\n  write(value, buffer, offset, _fieldInfo, rootNode) {\n    let fieldInfo = getFieldInfo(_fieldInfo);\n    var type = this.types[fieldInfo.type];\n    if(!type) {\n      return {\n        error: new Error(\"missing data type: \" + fieldInfo.type)\n      };\n    }\n    return type[1].call(this, value, buffer, offset, fieldInfo.typeArgs, rootNode);\n  }\n\n  sizeOf(value, _fieldInfo, rootNode) {\n    let fieldInfo = getFieldInfo(_fieldInfo);\n    var type = this.types[fieldInfo.type];\n    if(!type) {\n      throw new Error(\"missing data type: \" + fieldInfo.type);\n    }\n    if(typeof type[2] === 'function') {\n      return type[2].call(this, value, fieldInfo.typeArgs, rootNode);\n    } else {\n      return type[2];\n    }\n  }\n}\n\nmodule.exports = ProtoDef;\n"],"sourceRoot":"/source/"}