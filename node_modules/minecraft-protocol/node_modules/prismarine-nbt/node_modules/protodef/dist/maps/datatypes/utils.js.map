{"version":3,"sources":["datatypes/utils.js"],"names":[],"mappings":"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","file":"datatypes/utils.js","sourcesContent":["var assert = require('assert');\n\nvar { getField, tryCatch, addErrorField } = require(\"../utils\");\n\nmodule.exports = {\n  'varint': [readVarInt, writeVarInt, sizeOfVarInt],\n  'bool': [readBool, writeBool, 1],\n  'pstring': [readPString, writePString, sizeOfPString],\n  'buffer': [readBuffer, writeBuffer, sizeOfBuffer],\n  'void': [readVoid, writeVoid, 0],\n  'bitfield': [readBitField, writeBitField, sizeOfBitField],\n  'cstring': [readCString, writeCString, sizeOfCString],\n  'mapper':[readMapper,writeMapper,sizeOfMapper]\n};\n\nfunction readMapper(buffer,offset,typeArgs,rootNode)\n{\n  var readResults=this.read(buffer, offset, typeArgs.type, rootNode);\n  var results={\n    size:readResults.size\n  };\n  var value=typeArgs.mappings[readResults.value];\n  if(value==undefined) throw new Error(value+\" is not in the mappings value\");\n  results.value=value;\n  return results;\n}\n\nfunction writeMapper(value,buffer,offset,typeArgs,rootNode)\n{\n  var keys=Object.keys(typeArgs.mappings);\n  var mappedValue=null;\n  for(var i=0;i<keys.length;i++) {\n    if(typeArgs.mappings[keys[i]]==value) {\n      mappedValue = keys[i];\n      break;\n    }\n  }\n  if(mappedValue==null) throw new Error(value+\" is not in the mappings value\");\n  return this.write(mappedValue,buffer,offset,typeArgs.type,rootNode);\n}\n\nfunction sizeOfMapper(value,typeArgs,rootNode)\n{\n  var keys=Object.keys(typeArgs.mappings);\n  var mappedValue=null;\n  for(var i=0;i<keys.length;i++) {\n    if(typeArgs.mappings[keys[i]]==value) {\n      mappedValue = keys[i];\n      break;\n    }\n  }\n  if(mappedValue==null) throw new Error(value+\" is not in the mappings value\");\n  return this.sizeOf(mappedValue,typeArgs.type,rootNode);\n}\n\nfunction readVarInt(buffer, offset) {\n  var result = 0;\n  var shift = 0;\n  var cursor = offset;\n\n  while(true) {\n    if(cursor + 1 > buffer.length) return null;\n    var b = buffer.readUInt8(cursor);\n    result |= ((b & 0x7f) << shift); // Add the bits to our number, except MSB\n    cursor++;\n    if(!(b & 0x80)) { // If the MSB is not set, we return the number\n      return {\n        value: result,\n        size: cursor - offset\n      };\n    }\n    shift += 7; // we only have 7 bits, MSB being the return-trigger\n    assert.ok(shift < 64, \"varint is too big\"); // Make sure our shift don't overflow.\n  }\n}\n\nfunction sizeOfVarInt(value) {\n  var cursor = 0;\n  while(value & ~0x7F) {\n    value >>>= 7;\n    cursor++;\n  }\n  return cursor + 1;\n}\n\nfunction writeVarInt(value, buffer, offset) {\n  var cursor = 0;\n  while(value & ~0x7F) {\n    buffer.writeUInt8((value & 0xFF) | 0x80, offset + cursor);\n    cursor++;\n    value >>>= 7;\n  }\n  buffer.writeUInt8(value, offset + cursor);\n  return offset + cursor + 1;\n}\n\n\nfunction readPString(buffer, offset, typeArgs,rootNode) {\n  var self=this;\n  var length;\n  tryCatch(function() {\n    length = self.read(buffer, offset, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n  }, function(e) {\n    addErrorField(e, \"$count\");\n    throw e;\n  });\n  var cursor = offset + length.size;\n  var stringLength = length.value;\n  var strEnd = cursor + stringLength;\n  if(strEnd > buffer.length) throw new Error(\"Missing characters in string, found size is \"+buffer.length+\n    \" expected size was \"+strEnd);\n\n  var value = buffer.toString('utf8', cursor, strEnd);\n  cursor = strEnd;\n\n  return {\n    value: value,\n    size: cursor - offset\n  };\n}\n\nfunction writePString(value, buffer, offset, typeArgs,rootNode) {\n  var self=this;\n  var length = Buffer.byteLength(value, 'utf8');\n  tryCatch(function() {\n    offset = self.write(length, buffer, offset, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n  }, function(e) {\n    addErrorField(e, \"$count\");\n    throw e;\n  });\n  buffer.write(value, offset, length, 'utf8');\n  return offset + length;\n}\n\n\nfunction sizeOfPString(value, typeArgs,rootNode) {\n  var self=this;\n  var length = Buffer.byteLength(value, 'utf8');\n  var size;\n  tryCatch(function() {\n    size = self.sizeOf(length, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n  }, function(e) {\n    addErrorField(e, \"$count\");\n    throw e;\n  });\n  return size + length;\n}\n\nfunction readBool(buffer, offset) {\n  if(offset + 1 > buffer.length) return null;\n  var value = buffer.readInt8(offset);\n  return {\n    value: !!value,\n    size: 1,\n  };\n}\n\nfunction writeBool(value, buffer, offset) {\n  buffer.writeInt8(+value, offset);\n  return offset + 1;\n}\n\n\nfunction readBuffer(buffer, offset, typeArgs, rootNode) {\n  var size = 0;\n  var count;\n  if (typeof typeArgs.count !== \"undefined\")\n    count = getField(typeArgs.count, rootNode);\n  else if (typeof typeArgs.countType !== \"undefined\") {\n    var countResults = this.read(buffer, offset, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n    size += countResults.size;\n    offset += countResults.size;\n    count = countResults.value;\n  }\n  return {\n    value: buffer.slice(offset, offset + count),\n    size: size + count\n  };\n}\n\nfunction writeBuffer(value, buffer, offset, typeArgs, rootNode) {\n  if (typeof typeArgs.count === \"undefined\" &&\n      typeof typeArgs.countType !== \"undefined\") {\n    offset = this.write(value.length, buffer, offset, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n  } else if (typeof typeArgs.count === \"undefined\") { // Broken schema, should probably error out\n  }\n  value.copy(buffer, offset);\n  return offset + value.length;\n}\n\nfunction sizeOfBuffer(value, typeArgs, rootNode) {\n  var size = 0;\n  if (typeof typeArgs.count === \"undefined\" &&\n      typeof typeArgs.countType !== \"undefined\") {\n    size = this.sizeOf(value.length, { type: typeArgs.countType, typeArgs: typeArgs.countTypeArgs }, rootNode);\n  }\n  return size + value.length;\n}\n\nfunction readVoid() {\n  return {\n    value: undefined,\n    size: 0,\n  };\n}\n\nfunction writeVoid(value, buffer, offset) {\n  return offset;\n}\n\nfunction generateBitMask(n) {\n  return (1 << n) - 1;\n}\n\nfunction readBitField(buffer, offset, typeArgs, context) {\n  var beginOffset = offset;\n  var curVal = null;\n  var bits = 0;\n  var results = {};\n  results.value = typeArgs.reduce(function(acc, item) {\n    var size = item.size;\n    var val = 0;\n    while (size > 0) {\n      if (bits == 0) {\n        curVal = buffer[offset++];\n        bits = 8;\n      }\n      var bitsToRead = Math.min(size, bits);\n      val = (val << bitsToRead) | (curVal & generateBitMask(bits)) >> (bits - bitsToRead);\n      bits -= bitsToRead;\n      size -= bitsToRead;\n    }\n    if (item.signed && val >= 1 << (item.size - 1))\n      val -= 1 << item.size;\n    acc[item.name] = val;\n    return acc;\n  }, {});\n  results.size = offset - beginOffset;\n  return results;\n}\nfunction writeBitField(value, buffer, offset, typeArgs, context) {\n  var toWrite = 0;\n  var bits = 0;\n  typeArgs.forEach(function(item) {\n    var val = value[item.name];\n    var size = item.size;\n    var signed = item.signed;\n    if ((!item.signed && val < 0) || (item.signed && val < -(1 << (size - 1))))\n      throw new Error(value + \" < \" + item.signed ? (-(1 << (size - 1))) : 0);\n    else if ((!item.signed && val >= 1 << size)\n        || (item.signed && val >= (1 << (size - 1)) - 1))\n      throw new Error(value + \" >= \" + iteme.signed ? (1 << size) : ((1 << (size - 1)) - 1));\n    while (size > 0) {\n      var writeBits = Math.min(8 - bits, size);\n      toWrite = toWrite << writeBits |\n        ((val >> (size - writeBits)) & generateBitMask(writeBits));\n      size -= writeBits;\n      bits += writeBits;\n      if (bits === 8) {\n        buffer[offset++] = toWrite;\n        bits = 0;\n        toWrite = 0;\n      }\n    }\n  });\n  if (bits != 0)\n    buffer[offset++] = toWrite << (8 - bits);\n  return offset;\n}\n\nfunction sizeOfBitField(value, typeArgs, context) {\n  return Math.ceil(typeArgs.reduce(function(acc, item) {\n    return acc + item.size;\n  }, 0) / 8);\n}\n\nfunction readCString(buffer, offset) {\n  var str = \"\";\n  var currChar;\n  while (offset < buffer.length && buffer[offset] != 0x00)\n    str += buffer[offset++];\n  if (offset < buffer.length)\n    return null;\n  else\n    return str;\n}\n\nfunction writeCString(value, buffer, offset) {\n  buffer.write(value, offset);\n  offset += value.length;\n  buffer.writeInt8(0x00, offset);\n  return offset + 1;\n}\n\nfunction sizeOfCString(value) {\n  return value.length + 1;\n}\n"],"sourceRoot":"/source/"}