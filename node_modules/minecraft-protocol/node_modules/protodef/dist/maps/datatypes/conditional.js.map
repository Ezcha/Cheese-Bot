{"version":3,"sources":["datatypes/conditional.js"],"names":[],"mappings":";;eAA0D,OAAO,CAAC,UAAU,CAAC;;IAAvE,QAAQ,YAAR,QAAQ;IAAE,YAAY,YAAZ,YAAY;IAAE,QAAQ,YAAR,QAAQ;IAAG,aAAa,YAAb,aAAa;;AAEtD,MAAM,CAAC,OAAO,GAAG;AACf,UAAQ,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC;AACjD,UAAQ,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC;CAClD,CAAC;;AAEF,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;;;AACtD,MAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACvD,MAAI,SAAS,CAAC;AACd,MAAI,aAAa,CAAC;AAClB,MAAI,WAAW,CAAC;AAChB,MAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,IAAI,OAAO,QAAQ,WAAQ,KAAK,WAAW,EAC9F,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,wCAAwC,CAAC,CAAC,KACnE;AACH,eAAW,GAAC,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC;AAC9D,QAAI,WAAW,EACb,aAAa,GAAG,QAAQ,WAAQ,CAAC,KAEjC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;GAC9C;AACD,WAAS,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;;AAExC,MAAI,CAAC,CAAC;AACN,UAAQ,CAAC,YAAM;AACb,KAAC,GAAG,MAAK,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GACpD,EAAE,UAAC,CAAC,EAAK;AACR,iBAAa,CAAC,CAAC,EAAE,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;AACtD,UAAM,CAAC,CAAC;GACT,CAAC,CAAC;AACH,SAAO,CAAC,CAAC;CACV;;AAED,SAAS,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;;;AAC9D,MAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACvD,MAAI,SAAS,CAAC;AACd,MAAI,WAAW,CAAC;AAChB,MAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,IAAI,OAAO,QAAQ,WAAQ,KAAK,WAAW,EAC9F,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,wCAAwC,CAAC,CAAC,KACnE;AACH,eAAW,GAAC,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC;AAC9D,QAAI,WAAW,EACb,SAAS,GAAG,YAAY,CAAC,QAAQ,WAAQ,CAAC,CAAC,KAE3C,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;GACxD;AACD,MAAI,CAAC,CAAC;AACN,UAAQ,CAAC;WAAM,CAAC,GAAC,OAAK,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;GAAA,EACrE,UAAC,CAAC,EAAK;AACL,iBAAa,CAAC,CAAC,EAAE,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;AACtD,UAAM,CAAC,CAAC;GACX,CAAC,CAAC;AACH,SAAO,CAAC,CAAC;CACV;;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;;;AAC/C,MAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACvD,MAAI,SAAS,CAAC;AACd,MAAI,WAAW,CAAC;AAChB,MAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,IAAI,OAAO,QAAQ,WAAQ,KAAK,WAAW,EAC9F,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,wCAAwC,CAAC,CAAC,KACnE;AACH,eAAW,GAAC,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC;AAC9D,QAAI,WAAW,EACb,SAAS,GAAG,YAAY,CAAC,QAAQ,WAAQ,CAAC,CAAC,KAE3C,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;GACxD;AACD,MAAI,CAAC,CAAC;AACN,UAAQ,CAAC;WAAM,CAAC,GAAC,OAAK,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,CAAC;GAAA,EACtD,UAAC,CAAC,EAAK;AACL,iBAAa,CAAC,CAAC,EAAE,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;AACtD,UAAM,CAAC,CAAC;GACT,CAAC,CAAC;AACL,SAAO,CAAC,CAAC;CACV;;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE;AACrD,MAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AACrC,MAAI,GAAG,KAAK,CAAC,EAAE;AACb,QAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC1D,UAAM,CAAC,IAAI,EAAE,CAAC;AACd,WAAO,MAAM,CAAC;GACf,MAAM;AACL,WAAO;AACL,UAAI,EAAE,CAAC;KACR,CAAC;GACH;CACF;;AAED,SAAS,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC7D,MAAI,KAAK,IAAI,IAAI,EAAE;AACjB,UAAM,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;AAC/B,UAAM,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;GAC7D,MAAM;AACL,UAAM,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;GAChC;AACD,SAAO,MAAM,CAAC;CACf;;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC9C,SAAO,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;CACtE","file":"datatypes/conditional.js","sourcesContent":["var { getField, getFieldInfo, tryCatch , addErrorField} = require('../utils');\n\nmodule.exports = {\n  'switch': [readSwitch, writeSwitch, sizeOfSwitch],\n  'option': [readOption, writeOption, sizeOfOption],\n};\n\nfunction readSwitch(buffer, offset, typeArgs, rootNode) {\n  var compareTo = getField(typeArgs.compareTo, rootNode);\n  var fieldInfo;\n  var resultingType;\n  var caseDefault;\n  if (typeof typeArgs.fields[compareTo] === 'undefined' && typeof typeArgs.default === \"undefined\")\n    throw new Error(compareTo + \" has no associated fieldInfo in switch\");\n  else {\n    caseDefault=typeof typeArgs.fields[compareTo] === 'undefined';\n    if (caseDefault)\n      resultingType = typeArgs.default;\n    else\n      resultingType = typeArgs.fields[compareTo];\n  }\n  fieldInfo = getFieldInfo(resultingType);\n\n  var r;\n  tryCatch(() => {\n    r = this.read(buffer, offset, fieldInfo, rootNode);\n  }, (e) => {\n    addErrorField(e, caseDefault ? \"default\" : compareTo);\n    throw e;\n  });\n  return r;\n}\n\nfunction writeSwitch(value, buffer, offset, typeArgs, rootNode) {\n  var compareTo = getField(typeArgs.compareTo, rootNode);\n  var fieldInfo;\n  var caseDefault;\n  if (typeof typeArgs.fields[compareTo] === 'undefined' && typeof typeArgs.default === \"undefined\")\n    throw new Error(compareTo + \" has no associated fieldInfo in switch\");\n  else {\n    caseDefault=typeof typeArgs.fields[compareTo] === 'undefined';\n    if (caseDefault)\n      fieldInfo = getFieldInfo(typeArgs.default);\n    else\n      fieldInfo = getFieldInfo(typeArgs.fields[compareTo]);\n  }\n  var r;\n  tryCatch(() => r=this.write(value, buffer, offset, fieldInfo, rootNode),\n    (e) => {\n      addErrorField(e, caseDefault ? \"default\" : compareTo);\n      throw e;\n  });\n  return r;\n}\n\nfunction sizeOfSwitch(value, typeArgs, rootNode) {\n  var compareTo = getField(typeArgs.compareTo, rootNode);\n  var fieldInfo;\n  var caseDefault;\n  if (typeof typeArgs.fields[compareTo] === 'undefined' && typeof typeArgs.default === \"undefined\")\n    throw new Error(compareTo + \" has no associated fieldInfo in switch\");\n  else {\n    caseDefault=typeof typeArgs.fields[compareTo] === 'undefined';\n    if (caseDefault)\n      fieldInfo = getFieldInfo(typeArgs.default);\n    else\n      fieldInfo = getFieldInfo(typeArgs.fields[compareTo]);\n  }\n  var r;\n  tryCatch(() => r=this.sizeOf(value, fieldInfo, rootNode),\n    (e) => {\n      addErrorField(e, caseDefault ? \"default\" : compareTo);\n      throw e;\n    });\n  return r;\n}\n\nfunction readOption(buffer, offset, typeArgs, context) {\n  var val = buffer.readUInt8(offset++);\n  if (val !== 0) {\n    var retval = this.read(buffer, offset, typeArgs, context);\n    retval.size++;\n    return retval;\n  } else {\n    return {\n      size: 1\n    };\n  }\n}\n\nfunction writeOption(value, buffer, offset, typeArgs, context) {\n  if (value != null) {\n    buffer.writeUInt8(1, offset++);\n    offset=this.write(value, buffer, offset, typeArgs, context);\n  } else {\n    buffer.writeUInt8(0, offset++);\n  }\n  return offset;\n}\n\nfunction sizeOfOption(value, typeArgs, context) {\n  return value == null ? 1 : this.sizeOf(value, typeArgs, context) + 1;\n}\n"],"sourceRoot":"/source/"}