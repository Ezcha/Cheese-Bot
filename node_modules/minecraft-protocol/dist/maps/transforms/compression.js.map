{"version":3,"sources":["transforms/compression.js"],"names":[],"mappings":"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","file":"transforms/compression.js","sourcesContent":["var [readVarInt, writeVarInt, sizeOfVarInt] = require(\"protodef\").types.varint;\nvar zlib = require(\"zlib\");\nvar Transform = require(\"readable-stream\").Transform;\n\nmodule.exports.createCompressor = function(threshold) {\n  return new Compressor(threshold);\n}\n\nmodule.exports.createDecompressor = function(threshold) {\n  return new Decompressor(threshold);\n}\n\nclass Compressor extends Transform {\n  constructor(compressionThreshold = -1) {\n    super();\n    this.compressionThreshold = compressionThreshold;\n  }\n\n  _transform(chunk, enc, cb) {\n    if (chunk.length >= this.compressionThreshold)\n    {\n      zlib.deflate(chunk, (err, newChunk) => {\n        if (err)\n          return cb(err);\n        var buf = new Buffer(sizeOfVarInt(chunk.length) + newChunk.length);\n        var offset = writeVarInt(chunk.length, buf, 0);\n        newChunk.copy(buf, offset);\n        this.push(buf);\n        return cb();\n      });\n    }\n    else\n    {\n      var buf = new Buffer(sizeOfVarInt(0) + chunk.length);\n      var offset = writeVarInt(0, buf, 0);\n      chunk.copy(buf, offset);\n      this.push(buf);\n      return cb();\n    }\n  }\n}\n\nclass Decompressor extends Transform {\n  constructor(compressionThreshold = -1) {\n    super();\n    this.compressionThreshold = compressionThreshold;\n  }\n\n  _transform(chunk, enc, cb) {\n    var size, value, error;\n    ({ size, value, error } = readVarInt(chunk, 0));\n    if (error)\n      return cb(error);\n    if (value === 0)\n    {\n      this.push(chunk.slice(size));\n      return cb();\n    }\n    else\n    {\n      zlib.inflate(chunk.slice(size), (err, newBuf) => {\n        if (err)\n          return cb(err);\n        this.push(newBuf);\n        return cb();\n      });\n    }\n  }\n}\n"],"sourceRoot":"/source/"}