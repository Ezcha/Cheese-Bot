{"version":3,"sources":["transforms/framing.js"],"names":[],"mappings":";;;;;;;;;;;;2CAA8C,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM;;IAAzE,UAAU;IAAE,WAAW;IAAE,YAAY;;AAC1C,IAAI,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC;;AAErD,MAAM,CAAC,OAAO,CAAC,cAAc,GAAG,YAAW;AACzC,SAAO,IAAI,QAAQ,EAAE,CAAC;CACvB,CAAA;;AAED,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,YAAW;AACvC,SAAO,IAAI,MAAM,EAAE,CAAC;CACrB,CAAA;;IAEK,MAAM;YAAN,MAAM;;AACC,WADP,MAAM,GACI;0BADV,MAAM;;AAER,+BAFE,MAAM,6CAEA;GACT;;eAHG,MAAM;;WAKA,oBAAC,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE;AACzB,UAAI,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACpD,iBAAW,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACrC,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB,UAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjB,aAAO,EAAE,EAAE,CAAC;KACb;;;SAXG,MAAM;GAAS,SAAS;;IAcxB,QAAQ;YAAR,QAAQ;;AACD,WADP,QAAQ,GACE;0BADV,QAAQ;;AAEV,+BAFE,QAAQ,6CAEF;AACR,QAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;GAC7B;;eAJG,QAAQ;;WAKF,oBAAC,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE;AACzB,UAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAI,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AACvB,UAAI,MAAM,GAAG,CAAC,CAAC;;iBAEW,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE;;AAAtF,WAAK,QAAL,KAAK;AAAE,UAAI,QAAJ,IAAI;AAAE,WAAK,QAAL,KAAK;;AACrB,aAAO,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,GAAG,IAAI,GAAG,KAAK,EAC5D;AACE,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AACnE,cAAM,IAAI,IAAI,GAAG,KAAK,CAAC;;oBACG,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE;;AAAtF,aAAK,SAAL,KAAK;AAAE,YAAI,SAAJ,IAAI;AAAE,aAAK,SAAL,KAAK;OACtB;AACD,UAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACxC,aAAO,EAAE,EAAE,CAAC;KACb;;;SAnBG,QAAQ;GAAS,SAAS","file":"transforms/framing.js","sourcesContent":["var [readVarInt, writeVarInt, sizeOfVarInt] = require(\"protodef\").types.varint;\nvar Transform = require(\"readable-stream\").Transform;\n\nmodule.exports.createSplitter = function() {\n  return new Splitter();\n}\n\nmodule.exports.createFramer = function() {\n  return new Framer();\n}\n\nclass Framer extends Transform {\n  constructor() {\n    super();\n  }\n\n  _transform(chunk, enc, cb) {\n    var buffer = new Buffer(sizeOfVarInt(chunk.length));\n    writeVarInt(chunk.length, buffer, 0);\n    this.push(buffer);\n    this.push(chunk);\n    return cb();\n  }\n}\n\nclass Splitter extends Transform {\n  constructor() {\n    super();\n    this.buffer = new Buffer(0);\n  }\n  _transform(chunk, enc, cb) {\n    this.buffer = Buffer.concat([this.buffer, chunk]);\n    var value, size, error;\n    var offset = 0;\n\n    ({ value, size, error } = readVarInt(this.buffer, offset) || { error: \"Not enough data\" });\n    while (!error && this.buffer.length >= offset + size + value)\n    {\n      this.push(this.buffer.slice(offset + size, offset + size + value));\n      offset += size + value;\n      ({ value, size, error } = readVarInt(this.buffer, offset) || { error: \"Not enough data\" });\n    }\n    this.buffer = this.buffer.slice(offset);\n    return cb();\n  }\n}\n\n"],"sourceRoot":"/source/"}