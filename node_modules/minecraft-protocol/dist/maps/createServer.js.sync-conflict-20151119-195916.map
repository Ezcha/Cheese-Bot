{"version":3,"sources":["createServer.js"],"names":[],"mappings":"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","file":"createServer.js","sourcesContent":["var ursa=require(\"./ursa\");\nvar crypto = require('crypto');\nvar yggserver = require('yggdrasil').server({});\nvar states = require(\"./states\");\nvar bufferEqual = require('buffer-equal');\nvar Server = require('./server');\nvar UUID = require('uuid-1345');\n\nmodule.exports=createServer;\n\nfunction createServer(options) {\n  options = options || {};\n  var port = options.port != null ?\n    options.port :\n    options['server-port'] != null ?\n      options['server-port'] :\n      25565;\n  var host = options.host || '0.0.0.0';\n  var kickTimeout = options.kickTimeout || 10 * 1000;\n  var checkTimeoutInterval = options.checkTimeoutInterval || 4 * 1000;\n  var onlineMode = options['online-mode'] == null ? true : options['online-mode'];\n  // a function receiving the default status object and the client\n  // and returning a modified response object.\n  var beforePing = options.beforePing || null;\n\n  var enableKeepAlive = options.keepAlive == null ? true : options.keepAlive;\n\n  var optVersion = options.version || require(\"./version\").defaultVersion;\n  var mcData=require(\"minecraft-data\")(optVersion);\n  var version = mcData.version;\n\n  var serverKey = ursa.generatePrivateKey(1024);\n\n  var server = new Server(version.majorVersion);\n  server.motd = options.motd || \"A Minecraft server\";\n  server.maxPlayers = options['max-players'] || 20;\n  server.playerCount = 0;\n  server.onlineModeExceptions = {};\n  server.on(\"connection\", function(client) {\n    client.once('set_protocol', onHandshake);\n    client.once('login_start', onLogin);\n    client.once('ping_start', onPing);\n    client.on('end', onEnd);\n\n    var keepAlive = false;\n    var loggedIn = false;\n    var lastKeepAlive = null;\n\n    var keepAliveTimer = null;\n    var loginKickTimer = setTimeout(kickForNotLoggingIn, kickTimeout);\n\n    var serverId;\n\n    function kickForNotLoggingIn() {\n      client.end('LoginTimeout');\n    }\n\n    function keepAliveLoop() {\n      if(!keepAlive)\n        return;\n\n      // check if the last keepAlive was too long ago (kickTimeout)\n      var elapsed = new Date() - lastKeepAlive;\n      if(elapsed > kickTimeout) {\n        client.end('KeepAliveTimeout');\n        return;\n      }\n      client.write('keep_alive', {\n        keepAliveId: Math.floor(Math.random() * 2147483648)\n      });\n    }\n\n    function onKeepAlive(packet) {\n      lastKeepAlive = new Date();\n    }\n\n    function startKeepAlive() {\n      keepAlive = true;\n      lastKeepAlive = new Date();\n      keepAliveTimer = setInterval(keepAliveLoop, checkTimeoutInterval);\n      client.on('keep_alive', onKeepAlive);\n    }\n\n    function onEnd() {\n      clearInterval(keepAliveTimer);\n      clearTimeout(loginKickTimer);\n    }\n\n    function onPing(packet) {\n      var response = {\n        \"version\": {\n          \"name\": version.minecraftVersion,\n          \"protocol\": version.version\n        },\n        \"players\": {\n          \"max\": server.maxPlayers,\n          \"online\": server.playerCount,\n          \"sample\": []\n        },\n        \"description\": {\"text\": server.motd},\n        \"favicon\": server.favicon\n      };\n\n      function answerToPing(err, response) {\n        if ( err ) return;\n        client.write('server_info', {response: JSON.stringify(response)});\n      }\n\n      if(beforePing) {\n        if ( beforePing.length > 2 ) {\n          beforePing(response, client, answerToPing);\n        } else {\n          answerToPing(null, beforePing(response, client) || response);\n        }\n      } else {\n        answerToPing(null, response);\n      }\n\n      client.once('ping', function(packet) {\n        client.write('ping', {time: packet.time});\n        client.end();\n      });\n    }\n\n    function onLogin(packet) {\n      client.username = packet.username;\n      var isException = !!server.onlineModeExceptions[client.username.toLowerCase()];\n      var needToVerify = (onlineMode && !isException) || (!onlineMode && isException);\n      if(needToVerify) {\n        serverId = crypto.randomBytes(4).toString('hex');\n        client.verifyToken = crypto.randomBytes(4);\n        var publicKeyStrArr = serverKey.toPublicPem(\"utf8\").split(\"\\n\");\n        var publicKeyStr = \"\";\n        for(var i = 1; i < publicKeyStrArr.length - 2; i++) {\n          publicKeyStr += publicKeyStrArr[i]\n        }\n        client.publicKey = new Buffer(publicKeyStr, 'base64');\n        client.once('encryption_begin', onEncryptionKeyResponse);\n        client.write('encryption_begin', {\n          serverId: serverId,\n          publicKey: client.publicKey,\n          verifyToken: client.verifyToken\n        });\n      } else {\n        loginClient();\n      }\n    }\n\n    function onHandshake(packet) {\n      client.serverHost = packet.serverHost;\n      client.serverPort = packet.serverPort;\n      client.protocolVersion = packet.protocolVersion;\n      if(packet.nextState == 1) {\n        client.state = states.STATUS;\n      } else if(packet.nextState == 2) {\n        client.state = states.LOGIN;\n      }\n      if(client.protocolVersion!=version.version)\n      {\n        client.end(\"Wrong protocol version, expected: \"+version.version+\" and you are using: \"+client.protocolVersion);\n      }\n    }\n\n    function onEncryptionKeyResponse(packet) {\n      try {\n        var verifyToken = serverKey.decrypt(packet.verifyToken, undefined, undefined, ursa.RSA_PKCS1_PADDING);\n        if(!bufferEqual(client.verifyToken, verifyToken)) {\n          client.end('DidNotEncryptVerifyTokenProperly');\n          return;\n        }\n        var sharedSecret = serverKey.decrypt(packet.sharedSecret, undefined, undefined, ursa.RSA_PKCS1_PADDING);\n      } catch(e) {\n        client.end('DidNotEncryptVerifyTokenProperly');\n        return;\n      }\n      client.setEncryption(sharedSecret);\n\n      var isException = !!server.onlineModeExceptions[client.username.toLowerCase()];\n      var needToVerify = (onlineMode && !isException) || (!onlineMode && isException);\n      var nextStep = needToVerify ? verifyUsername : loginClient;\n      nextStep();\n\n      function verifyUsername() {\n        yggserver.hasJoined(client.username, serverId, sharedSecret, client.publicKey, function(err, profile) {\n          if(err) {\n            client.end(\"Failed to verify username!\");\n            return;\n          }\n          // Convert to a valid UUID until the session server updates and does\n          // it automatically\n          client.uuid = profile.id.replace(/(\\w{8})(\\w{4})(\\w{4})(\\w{4})(\\w{12})/, \"$1-$2-$3-$4-$5\");\n          client.profile = profile;\n          loginClient();\n        });\n      }\n    }\n\n\n    // https://github.com/openjdk-mirror/jdk7u-jdk/blob/f4d80957e89a19a29bb9f9807d2a28351ed7f7df/src/share/classes/java/util/UUID.java#L163\n    function javaUUID(s)\n    {\n      var hash = crypto.createHash(\"md5\");\n      hash.update(s, 'utf8');\n      var buffer = hash.digest();\n      buffer[6] = (buffer[6] & 0x0f) | 0x30;\n      buffer[8] = (buffer[8] & 0x3f) | 0x80;\n      return buffer;\n    }\n\n    function nameToMcOfflineUUID(name)\n    {\n      return (new UUID(javaUUID(\"OfflinePlayer:\"+name))).toString();\n    }\n\n    function loginClient() {\n      var isException = !!server.onlineModeExceptions[client.username.toLowerCase()];\n      if(onlineMode == false || isException) {\n        client.uuid = nameToMcOfflineUUID(client.username);\n      }\n      client.write('compress', { threshold: 256 }); // Default threshold is 256\n      client.compressionThreshold = 256;\n      client.write('success', {uuid: client.uuid, username: client.username});\n      client.state = states.PLAY;\n      loggedIn = true;\n      if(enableKeepAlive) startKeepAlive();\n\n      clearTimeout(loginKickTimer);\n      loginKickTimer = null;\n\n      server.playerCount += 1;\n      client.once('end', function() {\n        server.playerCount -= 1;\n      });\n      server.emit('login', client);\n    }\n  });\n  server.listen(port, host);\n  return server;\n}\n"],"sourceRoot":"/source/"}