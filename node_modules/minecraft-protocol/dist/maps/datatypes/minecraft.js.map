{"version":3,"sources":["datatypes/minecraft.js"],"names":[],"mappings":"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","file":"datatypes/minecraft.js","sourcesContent":["var nbt = require('prismarine-nbt');\nvar types=require(\"protodef\").types;\nvar uuid = require('node-uuid');\n\n// TODO : remove type-specific, replace with generic containers and arrays.\nmodule.exports = {\n  'UUID': [readUUID, writeUUID, 16],\n  'nbt': [readNbt, writeNbt, sizeOfNbt],\n  'optionalNbt':[readOptionalNbt,writeOptionalNbt,sizeOfOptionalNbt],\n  'restBuffer': [readRestBuffer, writeRestBuffer, sizeOfRestBuffer],\n  'entityMetadataLoop': [readEntityMetadata, writeEntityMetadata, sizeOfEntityMetadata]\n};\n\nfunction readUUID(buffer, offset) {\n  return {\n    value: uuid.unparse(buffer, offset),\n    size: 16,\n  };\n}\n\nfunction writeUUID(value, buffer, offset) {\n  uuid.parse(value, buffer, offset);\n  return offset + 16;\n}\n\nfunction readNbt(buffer, offset) {\n  return nbt.proto.read(buffer,offset,\"nbt\");\n}\n\nfunction writeNbt(value, buffer, offset) {\n  return nbt.proto.write(value,buffer,offset,\"nbt\");\n}\n\nfunction sizeOfNbt(value) {\n  return nbt.proto.sizeOf(value,\"nbt\");\n}\n\n\nfunction readOptionalNbt(buffer, offset) {\n  if(buffer.readInt8(offset) == 0) return {size:1};\n  return nbt.proto.read(buffer,offset,\"nbt\");\n}\n\nfunction writeOptionalNbt(value, buffer, offset) {\n  if(value==undefined) {\n    buffer.writeInt8(0,offset);\n    return offset+1;\n  }\n  return nbt.proto.write(value,buffer,offset,\"nbt\");\n}\n\nfunction sizeOfOptionalNbt(value) {\n  if(value==undefined)\n    return 1;\n  return nbt.proto.sizeOf(value,\"nbt\");\n}\n\nfunction readRestBuffer(buffer, offset) {\n  return {\n    value: buffer.slice(offset),\n    size: buffer.length - offset\n  };\n}\n\nfunction writeRestBuffer(value, buffer, offset) {\n  value.copy(buffer, offset);\n  return offset + value.length;\n}\n\nfunction sizeOfRestBuffer(value) {\n  return value.length;\n}\n\nfunction readEntityMetadata(buffer, offset, typeArgs, context) {\n  var cursor = offset;\n  var metadata = [];\n  var item, key, type, results, reader, typeName, dataType;\n  while(true) {\n    item = buffer.readUInt8(cursor);\n    if(item === typeArgs.endVal) {\n      return {\n        value: metadata,\n        size: cursor + 1 - offset,\n      };\n    }\n    var results = this.read(buffer, cursor, typeArgs.type, {});\n    metadata.push(results.value);\n    cursor += results.size;\n  }\n}\n\nfunction writeEntityMetadata(value, buffer, offset, typeArgs, context) {\n  var self = this;\n  value.forEach(function(item) {\n    offset = self.write(item, buffer, offset, typeArgs.type, {});\n  });\n  buffer.writeUInt8(typeArgs.endVal, offset);\n  return offset + 1;\n}\n\nfunction sizeOfEntityMetadata(value, typeArgs, context) {\n  var size = 1;\n  for(var i = 0; i < value.length; ++i) {\n    size += this.sizeOf(value[i], typeArgs.type, {});\n  }\n  return size;\n}\n"],"sourceRoot":"/source/"}